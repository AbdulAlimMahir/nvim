return {
	"mikavilpas/yazi.nvim",
	event = "VeryLazy",
	dependencies = {
		"folke/snacks.nvim",
	},
	keys = {
		{
			"<leader>-",
			mode = { "n", "v" },
			"<cmd>Yazi<cr>",
			desc = "Open yazi at the current file",
		},
		{
			-- Open in the current working directory
			"<leader>cw",
			"<cmd>Yazi cwd<cr>",
			desc = "Open the file manager in nvim's working directory",
		},
		{
			"<c-up>",
			"<cmd>Yazi toggle<cr>",
			desc = "Resume the last yazi session",
		},
	},
	opts = {
		open_for_directories = false,
		open_multiple_tabs = false,
		highlight_groups = {
			hovered_buffer = nil,
			hovered_buffer_in_same_directory = nil,
		},

		floating_window_scaling_factor = 0.9,
		yazi_floating_window_winblend = 0,
		log_level = vim.log.levels.OFF,
		open_file_function = function(chosen_file, config, state) end,
		keymaps = {
			show_help = "<f1>",
			open_file_in_vertical_split = "<c-v>",
			open_file_in_horizontal_split = "<c-x>",
			open_file_in_tab = "<c-t>",
			grep_in_directory = "<c-s>",
			replace_in_directory = "<c-g>",
			cycle_open_buffers = "<tab>",
			copy_relative_path_to_selected_files = "<c-y>",
			send_to_quickfix_list = "<c-q>",
			change_working_directory = "<c-\\>",
		},
		set_keymappings_function = function(yazi_buffer_id, config, context) end,
		yazi_floating_window_border = "rounded",
		clipboard_register = "*",
		hooks = {
			yazi_opened = function(preselected_path, yazi_buffer_id, config) end,
			yazi_closed_successfully = function(chosen_file, config, state) end,
			yazi_opened_multiple_files = function(chosen_files, config, state) end,
		},
		highlight_hovered_buffers_in_same_directory = true,
		integrations = {
			grep_in_directory = function(directory) end,
			grep_in_selected_files = function(selected_files) end,
			replace_in_directory = function(directory) end,
			replace_in_selected_files = function(selected_files) end,
			resolve_relative_path_application = "",
		},

		future_features = {
			nvim_0_10_termopen_fallback = false,
			process_events_live = true,
		},
	},
	init = function()
		vim.g.loaded_netrwPlugin = 1
	end,
}
